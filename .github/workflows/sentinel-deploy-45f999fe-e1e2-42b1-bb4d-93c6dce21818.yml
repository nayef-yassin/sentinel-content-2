name: Deploy Content to cicd-demo [45f999fe-e1e2-42b1-bb4d-93c6dce21818]
# Note: This workflow will deploy everything in the root directory.
# To deploy content only from a specific path (for example SentinelContent):
#   1. Add the target path to the "paths" property like such
#    paths:
#    - 'SentinelContent/**'
#    - '!.github/workflows/**'
#    - '.github/workflows/sentinel-deploy-45f999fe-e1e2-42b1-bb4d-93c6dce21818.yml'
#   2. Append the path to the directory environment variable below
#       directory: '${{ github.workspace }}/SentinelContent'

on: 
  push:
    branches: [ main ]
    paths:
    - '**'
    - '!.github/workflows/**'  # this filter prevents other workflow changes from triggering this workflow
    - '.github/workflows/sentinel-deploy-45f999fe-e1e2-42b1-bb4d-93c6dce21818.yml'

jobs:
  deploy-content:
    runs-on: windows-latest
    env:
      resourceGroupName: 'nyassin-cicd'
      workspaceName: 'cicd-demo'
      workspaceId: '2c7139ec-1d3d-4739-b35a-83cacf567071'
      directory: '${{ github.workspace }}'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_45f999fee1e242b1bb4d93c6dce21818 }}
      contentTypes: 'AnalyticsRule'
      branch: 'main'
      sourceControlId: '45f999fe-e1e2-42b1-bb4d-93c6dce21818'
      rootDirectory: '${{ github.workspace }}'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_45f999fee1e242b1bb4d93c6dce21818 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_45f999fee1e242b1bb4d93c6dce21818 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_45f999fee1e242b1bb4d93c6dce21818 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-45f999fe-e1e2-42b1-bb4d-93c6dce21818.ps1