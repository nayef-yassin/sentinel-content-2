{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/FailedSigninsWithAuditDetails')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "Failed service logon attempt by user account with available AuditData",
        "category": "Hunting Queries",
        "query": "\nlet starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = totimespan((endtime-starttime)*7);\nlet failLimit = 10;\nlet ipLimit = 3;\nlet failedSignins = SigninLogs\n| where TimeGenerated between(starttime..endtime)\n| where ResultType != \"0\" and AppDisplayName != \"Windows Sign In\"\n| extend UserPrincipalName = tolower(UserPrincipalName)\n| extend CityState = strcat(tostring(LocationDetails.city),\"|\", tostring(LocationDetails.state))\n| extend Result = strcat(ResultType,\"-\",ResultDescription)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), DistinctIPAddressCount = dcount(IPAddress), IPAddresses = makeset(IPAddress),\nCityStates = makeset(CityState), DistinctResultCount = dcount(Result), Results = makeset(Result), AppDisplayNames = makeset(AppDisplayName),\nFailedLogonCount = count() by Type, OperationName, Category, UserPrincipalName = tolower(UserPrincipalName), ClientAppUsed, Location, CorrelationId\n| project Type, StartTimeUtc, EndTimeUtc, OperationName, Category, UserPrincipalName, AppDisplayNames, DistinctIPAddressCount, IPAddresses, DistinctResultCount,\nResults, FailedLogonCount, Location, CityStates\n| where FailedLogonCount >= failLimit or DistinctIPAddressCount >= ipLimit\n| extend Activity = pack(\"IPAddresses\", IPAddresses, \"AppDisplayNames\", AppDisplayNames, \"Results\", Results, \"Location\", Location, \"CityStates\", CityStates)\n| project Type, StartTimeUtc, EndTimeUtc, OperationName, Category, UserPrincipalName, FailedLogonCount, DistinctIPAddressCount, DistinctResultCount, Activity\n| extend AccountCustomEntity = UserPrincipalName;\nlet accountMods = AuditLogs | where TimeGenerated >= ago(lookback)\n| where Category == \"UserManagement\" or Category == \"GroupManagement\"\n| extend ModProps = TargetResources.[0].modifiedProperties\n| extend InitiatedBy = case(\nisnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName),\nisnotempty(tostring(parse_json(tostring(InitiatedBy.app)).displayName)), tostring(parse_json(tostring(InitiatedBy.app)).displayName),\n\"\")\n| extend UserPrincipalName = tolower(tostring(TargetResources.[0].userPrincipalName))\n| mvexpand ModProps\n| extend PropertyName = tostring(ModProps.displayName), oldValue = tostring(ModProps.oldValue), newValue = tostring(ModProps.newValue)\n| extend ModifiedProps = pack(\"PropertyName\",PropertyName,\"oldValue\",oldValue,\"newValue\",newValue)\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Activity = make_bag(ModifiedProps) by Type, InitiatedBy, UserPrincipalName, Category, OperationName, CorrelationId, Id\n| extend AccountCustomEntity = UserPrincipalName;\n// Gather only Audit data for UserPrincipalNames that we have Audit data for\nlet accountNameOnly = failedSignins | project UserPrincipalName;\nlet auditMods = accountNameOnly\n| join kind= innerunique (\naccountMods\n) on UserPrincipalName;\nlet availableAudits = auditMods | project UserPrincipalName;\nlet signinsWithAudit = availableAudits\n| join kind= innerunique (\nfailedSignins\n) on UserPrincipalName;\n// Union the Current Signin failures so we do not lose them with the Auditing data we do have\nlet activity = (union isfuzzy=true\nsigninsWithAudit, auditMods)\n| order by StartTimeUtc, UserPrincipalName;\nactivity\n| project StartTimeUtc, EndTimeUtc, DataType = Type, Category, OperationName, UserPrincipalName, InitiatedBy, Activity, FailedLogonCount, DistinctIPAddressCount, DistinctResultCount, CorrelationId, Id\n| order by UserPrincipalName, StartTimeUtc\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserPrincipalName\n",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "User account failed to logon in current period (default last 1 day). Excludes Windows Sign in attempts due to noise and limits to only more than 10 failed logons or 3 different IPs used.\nAdditionally, Azure Audit Log data from the last seve"
          },
          {
            "name": "tactics",
            "value": "CredentialAccess"
          },
          {
            "name": "relevantTechniques",
            "value": "T1110"
          }
        ]
      }
    }
  ]
}
