{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/WireDataBeacon')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "Detect beacon like pattern based on repetitive time intervals in Wire Data Traffic",
        "category": "Hunting Queries",
        "query": "\nlet lookback = 1d;\nlet TimeDeltaThreshold = 10;\nlet TotalEventsThreshold = 15;\nlet PercentBeaconThreshold = 95;\nlet PrivateIPregex = @'^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.';\nWireData\n| where TimeGenerated > lookback\n| extend RemoteIPType = iff(RemoteIP matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where RemoteIPType ==\"public\"\n| project TimeGenerated , LocalIP , LocalPortNumber , RemoteIP, RemotePortNumber, ReceivedBytes, SentBytes\n| sort by LocalIP asc,TimeGenerated asc, RemoteIP asc, RemotePortNumber asc\n| serialize\n| extend nextTimeGenerated = next(TimeGenerated, 1), nextLocalIP = next(LocalIP, 1)\n| extend TimeDeltainSeconds = datetime_diff('second',nextTimeGenerated,TimeGenerated)\n| where LocalIP == nextLocalIP\n//Whitelisting criteria/ threshold criteria\n| where TimeDeltainSeconds > TimeDeltaThreshold\n| where RemotePortNumber != \"0\"\n| project TimeGenerated, TimeDeltainSeconds, LocalIP, LocalPortNumber,RemoteIP,RemotePortNumber, ReceivedBytes, SentBytes\n| summarize count(), sum(ReceivedBytes), sum(SentBytes), make_list(TimeDeltainSeconds) by TimeDeltainSeconds, bin(TimeGenerated, 1h), LocalIP, RemoteIP, RemotePortNumber\n| summarize (MostFrequentTimeDeltaCount, MostFrequentTimeDeltainSeconds)=arg_max(count_, TimeDeltainSeconds), TotalEvents=sum(count_), TotalSentBytes=sum(sum_SentBytes),TotalReceivedBytes=sum(sum_ReceivedBytes) by bin(TimeGenerated, 1h), LocalIP, RemoteIP, RemotePortNumber\n| where TotalEvents > TotalEventsThreshold\n| extend BeaconPercent = MostFrequentTimeDeltaCount/toreal(TotalEvents) * 100\n| where BeaconPercent > PercentBeaconThreshold\n| extend timestamp = TimeGenerated, IPCustomEntity = RemoteIP\n",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "This query will identify beaconing patterns from Wire Data logs based on timedelta patterns. The query leverages various KQL functions\nto calculate time delta and then compare it with total events observed in a day to find percentage of bea"
          },
          {
            "name": "tactics",
            "value": "CommandAndControl"
          },
          {
            "name": "relevantTechniques",
            "value": "T1071,T1571"
          }
        ]
      }
    }
  ]
}
