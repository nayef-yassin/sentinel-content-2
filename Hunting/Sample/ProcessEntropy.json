{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/ProcessEntropy')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "Entropy for Processes for a given Host",
        "category": "Hunting Queries",
        "query": "\n// exclude when over # of machines have the process\nlet excludeThreshold = 10;\n// exclude when more than percent (default 10%)\nlet ratioHighCount = 0.1;\n// exclude when less than percent (default 3%)\nlet ratioMidCount = 0.03;\n// Process count limit in one day per machine, perf improvement (default every 20 minutes for 24 hours - 3*24 = 72)\nlet procLimit = 3*24;\n// Decrease possibility of hitting memory limit by removing high process count items across all machines (default every 10 minutes for 24 hours - 6*24 = 144)\nlet maxLimit = 6*24;\nlet removeHigh = SecurityEvent \n| where TimeGenerated >= ago(1d)\n| where EventID == 4688 | summarize count() by NewProcessName = tolower(NewProcessName) | where count_ > maxLimit\n| summarize make_set(NewProcessName);\nlet SecEvents = SecurityEvent\n| where TimeGenerated >= ago(1d)\n| where EventID == 4688 | where tolower(NewProcessName) !in~ (removeHigh)\n// removing common items that may still show up in small environments, add here if you have additional exclusions \n| where NewProcessName !has ':\\\\Windows\\\\System32\\\\conhost.exe' and ParentProcessName !has ':\\\\Windows\\\\System32\\\\conhost.exe' \n| where ParentProcessName !has ':\\\\Windows\\\\System32\\\\wuauclt.exe' and NewProcessName !has':\\\\Windows\\\\System32\\\\wuauclt.exe' and NewProcessName !startswith 'C:\\\\Windows\\\\SoftwareDistribution\\\\Download\\\\Install\\\\AM_Delta_Patch_' \n| where ParentProcessName !has ':\\\\WindowsAzure\\\\GuestAgent_' and NewProcessName !has ':\\\\WindowsAzure\\\\GuestAgent_' \n| where ParentProcessName !has ':\\\\WindowsAzure\\\\WindowsAzureNetAgent_' and NewProcessName !has ':\\\\WindowsAzure\\\\WindowsAzureNetAgent_' \n| where ParentProcessName !has ':\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\platform\\\\' and NewProcessName !has \"\\\\Windows Defender Advanced Threat Protection\\\\SenseCncProxy.exe\" and NewProcessName !has \"\\\\Windows Defender Advanced Threat Protection\\\\SenseIR.exe.exe\" \n| where NewProcessName !has ':\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\platform\\\\' \n| where NewProcessName !has ':\\\\Windows\\\\Microsoft.NET\\\\Framework' and not(NewProcessName endswith '\\\\ngentask.exe' or NewProcessName endswith '\\\\ngen.exe') \n| where ParentProcessName !has ':\\\\Windows\\\\Microsoft.NET\\\\Framework' and not(ParentProcessName endswith '\\\\ngentask.exe' or ParentProcessName endswith '\\\\ngen.exe') \n| where NewProcessName !has ':\\\\Windows\\\\System32\\\\taskhostw.exe' and ParentProcessName !has ':\\\\Windows\\\\System32\\\\taskhostw.exe' \n| where ParentProcessName !has ':\\\\Windows\\\\SoftwareDistribution\\\\Download\\\\Install\\\\' and not(NewProcessName endswith '\\\\MpSigStub.exe') \n| where NewProcessName !has ':\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\Health Service State\\\\' and ParentProcessName !has ':\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\MonitoringHost.exe' \n| where NewProcessName !has ':\\\\Windows\\\\servicing\\\\trustedinstaller.exe' \n| where ParentProcessName !has ':\\\\Program Files\\\\Microsoft Dependency Agent\\\\bin\\\\MicrosoftDependencyAgent.exe' \n| where ParentProcessName !has ':\\\\Program Files (x86)\\\\Microsoft\\\\EdgeUpdate\\\\MicrosoftEdgeUpdate.exe'\n| project TimeGenerated, EventID, Computer, SubjectUserSid, Account, AccountType, Process, NewProcessName, CommandLine, ParentProcessName, _ResourceId, SourceComputerId;\nlet Exclude = SecEvents \n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ExcludeCompCount = dcount(Computer), ExcludeProcCount = count() by Process \n// Removing general limit for noise in one day \n| extend timediff = iff(datetime_diff('day', EndTime, StartTime) > 0, datetime_diff('day', EndTime, StartTime), 1) \n// Default exclude of 48 (2 per hour) or more executions in 24 hours on a given machine \n| where ExcludeProcCount > procLimit*timediff \n// Removing noisy processes for an environment, adjust as needed \n| extend compRatio = ExcludeCompCount/toreal(ExcludeProcCount) \n| where compRatio == 0 or (ExcludeCompCount > excludeThreshold and compRatio < ratioHighCount) or (ExcludeCompCount between (2 .. excludeThreshold) and compRatio < ratioMidCount);\nlet AllSecEvents =  \nSecEvents | project Computer, Process \n| join kind= leftanti (  \nSecEvents \n// Removing general limit for noise in one day \n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), procCount = count() by Computer, Process \n| extend timediff = iff(datetime_diff('day', EndTime, StartTime) > 0, datetime_diff('day', EndTime, StartTime), 1) \n// Default exclude 48 (2 per hour) or more executions in 24 hours on a given machine to remove them from overall comparison list \n| where procCount > procLimit*timediff \n) on Computer, Process \n| project Computer, Process;\n// Removing noisy process from full list \nlet Include = materialize(AllSecEvents \n| join kind= leftanti ( \nExclude \n) on Process);\n// Identifying prevalence for a given process in the environment \nlet DCwPC = materialize(Include \n| summarize DistinctHostsProcessCount = dcount(Computer) by Process \n| join kind=inner ( \nInclude \n) on Process \n| distinct Computer, Process, DistinctHostsProcessCount);\n// Getting the Total process count on each host to use as the denominator in the entropy calc \nlet AHPC = materialize(Include \n| summarize AllHostsProcessCount = count() by Computer \n| join kind=inner ( \nInclude \n) on Computer \n| distinct Computer, Process, AllHostsProcessCount \n//Getting a decimal value for later computation \n| extend AHPCValue = todecimal(AllHostsProcessCount));\n// Need the count of each class in my bucket or also said as count of ProcName(Class) per Host(Bucket) for use in the entropy calc \nlet PCoH = Include \n| summarize ProcessCountOnHost = count() by Computer, Process \n| join kind=inner ( \nInclude \n) on Computer,Process \n| distinct Computer, Process, ProcessCountOnHost \n//Getting a decimal value for later computation \n| extend PCoHValue = todecimal(ProcessCountOnHost); \nlet Combined = DCwPC \n| join ( \nAHPC \n) on Computer, Process \n| join ( \nPCoH \n) on Computer, Process;\nlet Results = Combined \n// Entropy calculation \n| extend ProcessEntropy = -log2(PCoHValue/AHPCValue)*(PCoHValue/AHPCValue) \n// Calculating Weight, see details in description \n| extend Weight = toreal(ProcessEntropy*ProcessCountOnHost*DistinctHostsProcessCount) \n// Remove or increase value to see processes with low entropy, meaning more common. \n| where Weight <= 100\n| project Computer, Process, Weight , ProcessEntropy, AllHostsProcessCount, ProcessCountOnHost, DistinctHostsProcessCount; \n// Join back full entry \nResults \n| join kind= inner ( \nSecEvents\n| project TimeGenerated, EventID, Computer, SubjectUserSid, Account, AccountType, Process, NewProcessName, CommandLine, ParentProcessName, _ResourceId, SourceComputerId \n) on Computer, Process \n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), ResultCount = count() by EventID, Computer, SubjectUserSid, Account, AccountType, Weight, ProcessEntropy,  \nProcess, NewProcessName, CommandLine, ParentProcessName, AllHostsProcessCount, ProcessCountOnHost, DistinctHostsProcessCount, _ResourceId, SourceComputerId\n| project-reorder StartTime, EndTime, ResultCount, EventID, Computer, SubjectUserSid, Account, AccountType, Weight, ProcessEntropy,  \nProcess, NewProcessName, CommandLine, ParentProcessName, AllHostsProcessCount, ProcessCountOnHost, DistinctHostsProcessCount, _ResourceId, SourceComputerId\n| sort by Weight asc, ProcessEntropy asc, NewProcessName asc \n| extend timestamp = StartTime, HostCustomEntity = Computer, AccountCustomEntity = Account\n",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Entropy calculation used to help identify Hosts where they have a high variety of processes(a high entropy process list on a given Host over time).\nThis helps us identify rare processes on a given Host. Rare here means a process shows up on"
          },
          {
            "name": "tactics",
            "value": "Execution"
          }
        ]
      }
    }
  ]
}
