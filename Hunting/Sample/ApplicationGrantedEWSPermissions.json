{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/ApplicationGrantedEWSPermissions')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "eTag": "*",
        "displayName": "Application Granted EWS Permissions",
        "category": "Hunting Queries",
        "query": "AuditLogs\n| where Category == \"ApplicationManagement\"\n| where OperationName has \"Add app role assignment to service principal\"\n| extend UA = tostring(AdditionalDetails[0].value)\n| mv-expand TargetResources\n| extend ModifiedProps = TargetResources.modifiedProperties\n| mv-expand ModifiedProps\n| where ModifiedProps.newValue has \"Use Exchange Web Services with full access to all mailboxes\"\n| extend Action = ModifiedProps.newValue\n| extend User = tolower(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName))\n| join kind=inner AuditLogs on CorrelationId\n| mv-expand TargetResources1\n| mv-expand TargetResources1.modifiedProperties\n| project-reorder TargetResources1_modifiedProperties\n| extend displayName_ = tostring(TargetResources1_modifiedProperties.displayName)\n| extend AppId = iff(tostring(TargetResources1_modifiedProperties.displayName) == \"ServicePrincipal.AppId\", tostring(TargetResources1_modifiedProperties.newValue), \"\")\n| extend AppName = iff(tostring(TargetResources1_modifiedProperties.displayName) == \"ServicePrincipal.DisplayName\", tostring(TargetResources1_modifiedProperties.newValue), \"\")\n| summarize make_set(AppName), make_set(AppId) by TimeGenerated, ActivityDisplayName, UA, User, Result, OperationName, tostring(InitiatedBy), bin(TimeGenerated, 1d), tostring(Action)\n| where tostring(set_AppId) != '[\"\"]'\n| project-reorder TimeGenerated, User, set_AppName\n| join kind=leftouter (SecurityAlert\n| where ProviderName == \"IPC\"\n| extend User = tolower(tostring(parse_json(ExtendedProperties).[\"User Account\"]))\n| summarize count() by bin(TimeGenerated, 1d), User) on TimeGenerated, User\n| extend NumberofAADAlerts = iif(isnotempty(count_AlertName), count_AlertName, 0)\n| sort by NumberofAADAlerts desc\n| extend AppName = tostring(set_AppName[1])\n| extend AppID = tostring(set_AppId[1])\n| project-away set_AppName, set_AppId\n| project-reorder TimeGenerated, ActivityDisplayName, Action, User, NumberofAADAlerts, AppName, AppID\n| extend timestamp = TimeGenerated, AccountCustomEntity = User\n",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Finds AD applications granted permissions to read users mailboxes via Exchange Web Services (EWS). A threat actor could add these permissions to an application they control in order to gain persistent access to user's mail.\nReview the appli"
          },
          {
            "name": "tactics",
            "value": "Collection,PrivilegeEscalation"
          },
          {
            "name": "relevantTechniques",
            "value": "T1078.004,T1114.002"
          }
        ]
      }
    }
  ]
}
