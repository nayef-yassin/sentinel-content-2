{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('workspace'), '/vimAuthenticationAADManagedIdentitySignInLogs')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "etag": "*",
        "displayName": "Azure active directory managed identity authentication",
        "category": "Security",
        "FunctionAlias": "vimAuthenticationAADManagedIdentitySignInLogs",
        "query": "let AADMIAuthentication=(starttime:datetime=datetime(null), endtime:datetime=datetime(null), targetusername_has:string=\"*\", disable:bool=false){\n  AADManagedIdentitySignInLogs | where not(disabled)\n  // ************************************************************************* \n  //       <Prefilterring>\n  // *************************************************************************\n  | where \n    (isnull(starttime)   or TimeGenerated >= starttime) \n    and (isnull(endtime)     or TimeGenerated <= starttime)\n    and (targetusername_has=='*' or (ServicePrincipalName has targetusername_has))\n  // ************************************************************************* \n  //       </Prefilterring>\n  // ************************************************************************* \n  | extend\n      EventVendor = 'Microsoft'\n      , EventProduct = 'AAD Managed Identity'\n      , EventCount=int(1)\n      , EventSchemaVersion='0.1.0'\n      , EventResult = iff (ResultType ==0, 'Success', 'Failure')\n      //, EventOriginalResultDetails = ResultType\n      , EventOriginalResultDetails = coalesce(ResultDescription, ResultType)\n      , EventStartTime = TimeGenerated\n      , EventEndTime= TimeGenerated\n      , EventType= 'Logon'\n      , Location = todynamic(LocationDetails)\n      , TargetAppId = ResourceIdentity \n      , TargetAppName=ResourceDisplayName\n      , TargetUserType='ServicePrincipal'\n      , TargetUsername=ServicePrincipalName\n      , TargetUserId=ServicePrincipalId\n      , TargetUsernameType='Simple'\n      , TargetUserIdType='AADID'\n  | extend\n      SrcGeoCity=tostring(Location.city)\n      , SrcGeoCountry=tostring(Location.countryOrRegion)\n      , SrcGeoLatitude=toreal(Location.geoCoordinates.latitude)\n      , SrcGeoLongitude=toreal(Location.geoCoordinates.longitude)\n  | project-rename\n      EventOriginalUid = Id\n      , TargetSessionId = CorrelationId\n      , SrcDvcIpAddr = IPAddress\n  | project-reorder\n      TimeGenerated\n      ,EventProduct\n      , EventOriginalUid\n      , EventResult\n      //, EventOriginalResultDetails \n      , EventOriginalResultDetails\n      , EventStartTime\n      , EventEndTime\n      , TargetSessionId\n      , SrcGeoCountry\n      , SrcGeoCity\n      , TargetAppName\n      , TargetAppId\n      | lookup AADSTSErrorCodes on ResultType\n      // ** Aliases\n      | extend \n        User=TargetUsername\n      , LogonTarget=ResourceIdentity\n      , Dvc=EventVendor\n      };\nAADMIAuthentication(starttime, endtime, targetusername_has, disabled)",
        "version": 1,
        "functionParameters": "starttime:datetime=datetime(null), endtime:datetime=datetime(null), targetusername_has:string='*', disabled:bool=False"
      }
    }
  ]
}
